[project]
name = "DeepCropMapping"
version = "0.1.0"
description = "Deep learning-based crop mapping using multi-temporal satellite imagery"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    # Deep Learning Frameworks
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    # Core Data Processing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",
    # Image Processing
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    # Visualization
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    # Utilities
    "tqdm>=4.65.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "pyyaml>=6.0",
    "h5py>=3.9.0",
    "textual>=5.0.0",
    "rich>=14.1.0",
    "wandb>=0.17.0",
]

[project.optional-dependencies]
geospatial = [
    # Geospatial Processing (install separately if needed)
    "rasterio>=1.3.0",
    "geopandas>=0.13.0",
    "shapely>=2.0.0",
    "fiona>=1.9.0",
    "pyproj>=3.6.0",
]
remote-sensing = [
    # Remote Sensing APIs (install separately if needed)  
    "earthengine-api>=0.1.360",
    "planetary-computer>=0.4.0",
    "pystac-client>=0.7.0",
    "rio-cogeo>=3.5.0",
]
extra-viz = [
    # Extra visualization tools
    "plotly>=5.15.0",
]
data-formats = [
    # Additional data format support
    "netcdf4>=1.6.0",
]
dev = [
    "pytest>=7.4.0",
    "black>=23.0.0",
    "ruff>=0.0.280",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["deepcropmapping*"]

[tool.black]
line-length = 88
target-version = ['py313']

[tool.ruff]
line-length = 88
target-version = "py313"
select = ["E", "F", "W", "I", "N", "UP"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
